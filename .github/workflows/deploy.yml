name: 🚀 Deploy FastAPI to Heroku (sans Docker)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: false
          fetch-depth: 0

      - name: 🐍 Set up Python (from runtime.txt)
        uses: actions/setup-python@v5
        with:
          python-version-file: 'runtime.txt'

      - name: 📦 Install dependencies using Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry config virtualenvs.create false
          poetry install --no-interaction --no-ansi --no-root

      - name: 📥 Télécharger modèle Hugging Face (sans fichiers lourds)
        env:
          HUGGINGFACE_HUB_CACHE: ./hf_cache
        run: |
          poetry run python -c "from huggingface_hub import snapshot_download; snapshot_download(repo_id='cantalapiedra/semantic-segmentation-model', local_dir='./hf_cache', local_dir_use_symlinks=False, ignore_patterns=['*.msgpack', '*.h5', '*.bin', '*.safetensors'])"

      - name: ✅ Run tests
        run: |
          poetry run python -W ignore::DeprecationWarning -W ignore::PendingDeprecationWarning -m pytest

      - name: 🔧 Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh

      - name: 🔑 Configure Heroku Remote
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          heroku git:remote --app $HEROKU_APP_NAME

      - name: 🚀 Deploy to Heroku (force push main branch)
        run: |
          git push heroku HEAD:main -f
