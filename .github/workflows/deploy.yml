name: 🚀 Deploy FastAPI to Heroku

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: false
          fetch-depth: 0

      - name: 🐍 Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: 📦 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install huggingface_hub pytest

      - name: 📥 Télécharger le modèle Hugging Face
        run: |
          python -c "from huggingface_hub import snapshot_download; snapshot_download(repo_id='cantalapiedra/semantic-segmentation-model', local_dir='./hf_cache')"
        env:
          HUGGINGFACE_HUB_CACHE: ./hf_cache

      - name: ✅ Run tests
        run: |
          python -m pytest

      - name: 🔧 Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh

      - name: 🔑 Configure .netrc + Push to Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
          HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
        run: |
          # 1) Construire le ~/.netrc pour authentifier Git avec Heroku
          echo "machine api.heroku.com
          login $HEROKU_EMAIL
          password $HEROKU_API_KEY

          machine git.heroku.com
          login $HEROKU_EMAIL
          password $HEROKU_API_KEY
          " >> ~/.netrc

          # 2) Empêcher que Git demande des informations interactives
          git config --global credential.helper store

          # 3) Configurer le remote heroku
          heroku git:remote --app $HEROKU_APP_NAME

          # 4) Pousser en forçant (HEAD -> main)
          git push heroku HEAD:main -f
